---
---

<header>
  <div class="container">
    <div class="logo">
      <h1>Global Currency Exchange</h1>
    </div>
    <nav>
      <ul>
        <li><a href="#converter">Converter</a></li>
        <li><a href="#rates">Exchange Rates</a></li>
        <li><a href="#about">About</a></li>
      </ul>
    </nav>
    <button id="theme-toggle" class="theme-toggle" aria-label="Toggle dark mode">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="sun-icon">
        <circle cx="12" cy="12" r="5"></circle>
        <line x1="12" y1="1" x2="12" y2="3"></line>
        <line x1="12" y1="21" x2="12" y2="23"></line>
        <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
        <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
        <line x1="1" y1="12" x2="3" y2="12"></line>
        <line x1="21" y1="12" x2="23" y2="12"></line>
        <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
        <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
      </svg>
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="moon-icon">
        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
      </svg>
    </button>
  </div>
</header>

<script>
  const themeToggle = document.getElementById('theme-toggle');
  
  // Function to toggle theme
  function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
  }
  
  // Add event listener to theme toggle button
  themeToggle.addEventListener('click', toggleTheme);
  
  // Set initial icon state based on current theme
  function updateThemeIcon() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    if (currentTheme === 'dark') {
      document.querySelector('.sun-icon').style.display = 'none';
      document.querySelector('.moon-icon').style.display = 'block';
    } else {
      document.querySelector('.sun-icon').style.display = 'block';
      document.querySelector('.moon-icon').style.display = 'none';
    }
  }
  
  // Update icon on page load
  updateThemeIcon();
  
  // Update icon when theme changes
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.attributeName === 'data-theme') {
        updateThemeIcon();
      }
    });
  });
  
  observer.observe(document.documentElement, { attributes: true });
</script>

<style>
  header {
    background: linear-gradient(83.21deg, var(--primary-color) 0%, var(--secondary-color) 100%);
    color: white;
    padding: 1rem 0;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
  }
  
  .logo h1 {
    margin: 0;
    font-size: 1.5rem;
    font-weight: 700;
  }
  
  nav ul {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
    gap: 1.5rem;
  }
  
  nav a {
    color: white;
    text-decoration: none;
    font-weight: 500;
    transition: opacity 0.3s ease;
  }
  
  nav a:hover {
    opacity: 0.8;
  }
  
  .theme-toggle {
    background: rgba(255, 255, 255, 0.2);
    border: none;
    color: white;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  
  .theme-toggle:hover {
    background: rgba(255, 255, 255, 0.3);
  }
  
  .sun-icon, .moon-icon {
    position: absolute;
  }
  
  .moon-icon {
    display: none;
  }
  
  @media (max-width: 768px) {
    .container {
      flex-direction: column;
      gap: 1rem;
    }
    
    nav ul {
      gap: 1rem;
    }
    
    .theme-toggle {
      position: absolute;
      top: 1rem;
      right: 1rem;
    }
  }
</style>